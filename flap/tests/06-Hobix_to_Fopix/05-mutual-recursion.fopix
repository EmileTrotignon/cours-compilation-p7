def lambda_1 (closure_1, x) =
  if (x =? 0) then
    1
  else
    call
    (read_block (read_block (closure_1, 3), 0))
    with
    (read_block (closure_1, 3), (x - 1))
  end
def lambda_2 (closure_7, x) =
  if (x =? 0) then
    0
  else
    call
    (read_block (read_block (closure_7, 3), 0))
    with
    (read_block (closure_7, 3), (x - 1))
  end
val f =
  val block_2 = allocate_block (4) ;
  val ignore_6 = write_block (block_2, 0, &lambda_1) ;
  val ignore_5 = write_block (block_2, 1, &`-`) ;
  val ignore_4 = write_block (block_2, 2, &`=?`) ;
  val ignore_3 = write_block (block_2, 3, g) ; block_2
val g =
  val block_8 = allocate_block (4) ;
  val ignore_12 = write_block (block_8, 0, &lambda_2) ;
  val ignore_11 = write_block (block_8, 1, &`-`) ;
  val ignore_10 = write_block (block_8, 2, &`=?`) ;
  val ignore_9 = write_block (block_8, 3, f) ; block_8
val main =
  print_int (call (read_block (f, 0)) with (f, 20))