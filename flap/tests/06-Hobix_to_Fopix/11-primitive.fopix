def lambda_for_apply_1 (closure_for_apply_1, f, x) =
  call (read_block (f, 0)) with (f, x)
val apply =
  allocate_block (1)
val apply =
  val ignore_2 =
    write_block (apply, 0, &lambda_for_apply_1)
    ;
  apply
def
  lambda_for_apply2_2
  (closure_for_apply2_3, f, x, y)
  =
  call (read_block (f, 0)) with (f, x, y)
val apply2 =
  allocate_block (1)
val apply2 =
  val ignore_4 =
    write_block (apply2, 0, &lambda_for_apply2_2)
    ;
  apply2
val main =
  val __nothing__ =
    call
    (read_block (apply, 0))
    with
    (apply, &print_int, 42)
    ;
  call
  (read_block (apply, 0))
  with
  (
    apply,
    &print_int,
    call
    (read_block (apply2, 0))
    with
    (apply2, &`+`, 31, 2)
  )