def lambda_for_f_1 (closure_for_f_1, x) =
  if (x =? 0) then
    1
  else
    call
    (read_block (read_block (closure_for_f_1, 1), 0))
    with
    (read_block (closure_for_f_1, 1), (x - 1))
  end
def lambda_for_g_2 (closure_for_g_4, x) =
  if (x =? 0) then
    0
  else
    call
    (read_block (read_block (closure_for_g_4, 1), 0))
    with
    (read_block (closure_for_g_4, 1), (x - 1))
  end
val f =
  allocate_block (2)
val g =
  allocate_block (2)
val f =
  val ignore_3 = write_block (f, 0, &lambda_for_f_1) ;
  val ignore_2 = write_block (f, 1, g) ; f
val g =
  val ignore_6 = write_block (g, 0, &lambda_for_g_2) ;
  val ignore_5 = write_block (g, 1, f) ; g
val main =
  print_int (call (read_block (f, 0)) with (f, 20))